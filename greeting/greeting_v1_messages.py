"""Generated message classes for greeting version v1.

This is an API
"""
# NOTE: This file is autogenerated and should not be edited by hand.

from apitools.base.protorpclite import messages as _messages


package = 'greeting'


class GreetingAuthcheckRequest(_messages.Message):
  """A GreetingAuthcheckRequest object."""


class GreetingEP(_messages.Message):
  """A GreetingEP object.

  Fields:
    id: A string attribute.
    message: A string attribute.
  """

  id = _messages.StringField(1)
  message = _messages.StringField(2)


class GreetingEPCollection(_messages.Message):
  """A GreetingEPCollection object.

  Fields:
    items: A GreetingEP attribute.
    nextPageToken: A string attribute.
  """

  items = _messages.MessageField('GreetingEP', 1, repeated=True)
  nextPageToken = _messages.StringField(2)


class GreetingEPProto(_messages.Message):
  """A GreetingEPProto object."""


class GreetingGetRequest(_messages.Message):
  """A GreetingGetRequest object.

  Fields:
    id: A string attribute.
  """

  id = _messages.StringField(1, required=True)


class GreetingListRequest(_messages.Message):
  """A GreetingListRequest object.

  Fields:
    limit: A string attribute.
    order: A string attribute.
    pageToken: A string attribute.
  """

  limit = _messages.IntegerField(1)
  order = _messages.StringField(2)
  pageToken = _messages.StringField(3)


class GreetingSetup2Request(_messages.Message):
  """A GreetingSetup2Request object."""


class MainResult(_messages.Message):
  """A MainResult object.

  Fields:
    message: A string attribute.
  """

  message = _messages.StringField(1)


class StandardQueryParameters(_messages.Message):
  """Query parameters accepted by all methods.

  Enums:
    AltValueValuesEnum: Data format for the response.

  Fields:
    alt: Data format for the response.
    fields: Selector specifying which fields to include in a partial response.
    key: API key. Your API key identifies your project and provides you with
      API access, quota, and reports. Required unless you provide an OAuth 2.0
      token.
    oauth_token: OAuth 2.0 token for the current user.
    prettyPrint: Returns response with indentations and line breaks.
    quotaUser: Available to use for quota purposes for server-side
      applications. Can be any arbitrary string assigned to a user, but should
      not exceed 40 characters. Overrides userIp if both are provided.
    trace: A tracing token of the form "token:<tokenid>" to include in api
      requests.
    userIp: IP address of the site where the request originates. Use this if
      you want to enforce per-user limits.
  """

  class AltValueValuesEnum(_messages.Enum):
    """Data format for the response.

    Values:
      json: Responses with Content-Type of application/json
    """
    json = 0

  alt = _messages.EnumField('AltValueValuesEnum', 1, default=u'json')
  fields = _messages.StringField(2)
  key = _messages.StringField(3)
  oauth_token = _messages.StringField(4)
  prettyPrint = _messages.BooleanField(5, default=True)
  quotaUser = _messages.StringField(6)
  trace = _messages.StringField(7)
  userIp = _messages.StringField(8)


